type: checkiO
files:
- name: mission.py
  visible: true
  text: "from typing import Iterable\ndef is_ascending(items: Iterable[int]) -> bool:\n\
    \    # your code here\n    return True\n\n\nif __name__ == '__main__':\n    print(\"\
    Example:\")\n    print(is_ascending([-5, 10, 99, 123456]))\n    \n    # These\
    \ \"asserts\" are used for self-checking and not for an auto-testing\n    assert\
    \ is_ascending([-5, 10, 99, 123456]) == True\n    assert is_ascending([99]) ==\
    \ True\n    assert is_ascending([4, 5, 6, 7, 3, 7, 9]) == False\n    assert is_ascending([])\
    \ == True\n    assert is_ascending([1, 1, 1, 1]) == False\n    print(\"Coding\
    \ complete? Click 'Check' to earn cool rewards!\")\n"
  learner_created: false
status: Unchecked
code: "from typing import Iterable\ndef is_ascending(items: Iterable[int]) -> bool:\n\
  \    # your code here\n    return True\n\n\nif __name__ == '__main__':\n    print(\"\
  Example:\")\n    print(is_ascending([-5, 10, 99, 123456]))\n    \n    # These \"\
  asserts\" are used for self-checking and not for an auto-testing\n    assert is_ascending([-5,\
  \ 10, 99, 123456]) == True\n    assert is_ascending([99]) == True\n    assert is_ascending([4,\
  \ 5, 6, 7, 3, 7, 9]) == False\n    assert is_ascending([]) == True\n    assert is_ascending([1,\
  \ 1, 1, 1]) == False\n    print(\"Coding complete? Click 'Check' to earn cool rewards!\"\
  )\n"
seconds_from_change: 9223372036854775807
