type: checkiO
files:
- name: mission.py
  visible: true
  text: "def date_time(time: str) -> str:\n    # replace this for solution\n    time_slit\
    \ = time.split('.')\n    month = [0, 'January', 'February', 'March', 'April',\
    \ 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\
    \    holyday = 'Somebody was born'\n    if int(time_slit[0]) == 1:\n        holyday\
    \ = 'Millenium'\n    elif int(time_slit[0]) == 9:\n        holyday = 'Victory'\n\
    \        \n    hour = int(time_slit[2].split()[1].split(':')[0])\n    minute =\
    \ int(time_slit[2].split()[1].split(':')[1]) \n    return f\"{int(time_slit[0])}\
    \ {month[int(time_slit[1])]} {time_slit[2].split()[0]} year {hour} hour{'' if\
    \ hour == 1 else 's'} {minute} minute{'' if minute == 1 else 's'}\"\n\n\nif __name__\
    \ == '__main__':\n    print(\"Example:\")\n    print(date_time('01.01.2000 00:00'))\n\
    \n    #These \"asserts\" using only for self-checking and not necessary for auto-testing\n\
    \    assert date_time(\"01.01.2000 00:00\") == \"1 January 2000 year 0 hours 0\
    \ minutes\", \"Millenium\"\n    assert date_time(\"09.05.1945 06:30\") == \"9\
    \ May 1945 year 6 hours 30 minutes\", \"Victory\"\n    assert date_time(\"20.11.1990\
    \ 03:55\") == \"20 November 1990 year 3 hours 55 minutes\", \"Somebody was born\"\
    \n    print(\"Coding complete? Click 'Check' to earn cool rewards!\")\n"
  learner_created: false
status: Solved
code: "def date_time(time: str) -> str:\n    # replace this for solution\n    time_slit\
  \ = time.split('.')\n    month = [0, 'January', 'February', 'March', 'April', 'May',\
  \ 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  \
  \  holyday = 'Somebody was born'\n    if int(time_slit[0]) == 1:\n        holyday\
  \ = 'Millenium'\n    elif int(time_slit[0]) == 9:\n        holyday = 'Victory'\n\
  \        \n    hour = int(time_slit[2].split()[1].split(':')[0])\n    minute = int(time_slit[2].split()[1].split(':')[1])\
  \ \n    return f\"{int(time_slit[0])} {month[int(time_slit[1])]} {time_slit[2].split()[0]}\
  \ year {hour} hour{'' if hour == 1 else 's'} {minute} minute{'' if minute == 1 else\
  \ 's'}\"\n\n\nif __name__ == '__main__':\n    print(\"Example:\")\n    print(date_time('01.01.2000\
  \ 00:00'))\n\n    #These \"asserts\" using only for self-checking and not necessary\
  \ for auto-testing\n    assert date_time(\"01.01.2000 00:00\") == \"1 January 2000\
  \ year 0 hours 0 minutes\", \"Millenium\"\n    assert date_time(\"09.05.1945 06:30\"\
  ) == \"9 May 1945 year 6 hours 30 minutes\", \"Victory\"\n    assert date_time(\"\
  20.11.1990 03:55\") == \"20 November 1990 year 3 hours 55 minutes\", \"Somebody\
  \ was born\"\n    print(\"Coding complete? Click 'Check' to earn cool rewards!\"\
  )\n"
seconds_from_change: 4629236
