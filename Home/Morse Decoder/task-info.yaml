type: checkiO
files:
- name: mission.py
  visible: true
  text: "MORSE = {'.-':    'a', '-...':  'b', '-.-.':  'c',\n         '-..':   'd',\
    \ '.':     'e', '..-.':  'f',\n         '--.':   'g', '....':  'h', '..':    'i',\n\
    \         '.---':  'j', '-.-':   'k', '.-..':  'l',\n         '--':    'm', '-.':\
    \    'n', '---':   'o',\n         '.--.':  'p', '--.-':  'q', '.-.':   'r',\n\
    \         '...':   's', '-':     't', '..-':   'u',\n         '...-':  'v', '.--':\
    \   'w', '-..-':  'x',\n         '-.--':  'y', '--..':  'z', '-----': '0',\n \
    \        '.----': '1', '..---': '2', '...--': '3',\n         '....-': '4', '.....':\
    \ '5', '-....': '6',\n         '--...': '7', '---..': '8', '----.': '9',\n   \
    \     '': ' '    \n            }\n\ndef morse_decoder(code):\n    #replace this\
    \ for solution\n    res = ''\n    for i in code.split(\" \"):\n            res\
    \ +=  MORSE[i]\n    \n    new_res = res.split()\n    return \" \".join(new_res).capitalize()\
    \ \n\nif __name__ == '__main__':\n    print(\"Example:\")\n    print(morse_decoder(\"\
    .. -   .-- .- ...   .-   --. --- --- -..   -.. .- -.--\"))\n\n    #These \"asserts\"\
    \ using only for self-checking and not necessary for auto-testing\n    assert\
    \ morse_decoder(\"... --- -- .   - . -..- -\") == \"Some text\"\n    assert morse_decoder(\"\
    ..--- ----- .---- ---..\") == \"2018\"\n    assert morse_decoder(\".. -   .--\
    \ .- ...   .-   --. --- --- -..   -.. .- -.--\") == \"It was a good day\"\n  \
    \  print(\"Coding complete? Click 'Check' to earn cool rewards!\")\n"
  learner_created: false
status: Solved
code: "MORSE = {'.-':    'a', '-...':  'b', '-.-.':  'c',\n         '-..':   'd',\
  \ '.':     'e', '..-.':  'f',\n         '--.':   'g', '....':  'h', '..':    'i',\n\
  \         '.---':  'j', '-.-':   'k', '.-..':  'l',\n         '--':    'm', '-.':\
  \    'n', '---':   'o',\n         '.--.':  'p', '--.-':  'q', '.-.':   'r',\n  \
  \       '...':   's', '-':     't', '..-':   'u',\n         '...-':  'v', '.--':\
  \   'w', '-..-':  'x',\n         '-.--':  'y', '--..':  'z', '-----': '0',\n   \
  \      '.----': '1', '..---': '2', '...--': '3',\n         '....-': '4', '.....':\
  \ '5', '-....': '6',\n         '--...': '7', '---..': '8', '----.': '9',\n     \
  \   '': ' '    \n            }\n\ndef morse_decoder(code):\n    #replace this for\
  \ solution\n    res = ''\n    for i in code.split(\" \"):\n            res +=  MORSE[i]\n\
  \    \n    new_res = res.split()\n    return \" \".join(new_res).capitalize() \n\
  \nif __name__ == '__main__':\n    print(\"Example:\")\n    print(morse_decoder(\"\
  .. -   .-- .- ...   .-   --. --- --- -..   -.. .- -.--\"))\n\n    #These \"asserts\"\
  \ using only for self-checking and not necessary for auto-testing\n    assert morse_decoder(\"\
  ... --- -- .   - . -..- -\") == \"Some text\"\n    assert morse_decoder(\"..---\
  \ ----- .---- ---..\") == \"2018\"\n    assert morse_decoder(\".. -   .-- .- ...\
  \   .-   --. --- --- -..   -.. .- -.--\") == \"It was a good day\"\n    print(\"\
  Coding complete? Click 'Check' to earn cool rewards!\")\n"
seconds_from_change: 1648079
