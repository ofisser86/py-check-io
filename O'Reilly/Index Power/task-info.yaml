type: checkiO
files:
- name: mission.py
  visible: true
  text: "def index_power(array: list, n: int) -> int:\n    \"\"\"\n        Find Nth\
    \ power of the element with index N.\n    \"\"\"\n    if n > len(array) - 1 :\n\
    \        return -1\n    \n    res = array[n]**n\n    \n    \n    return res\n\n\
    if __name__ == '__main__':\n    print('Example:')\n    print(index_power([1, 2,\
    \ 3, 4], 2))\n    \n    #These \"asserts\" using only for self-checking and not\
    \ necessary for auto-testing\n    assert index_power([1, 2, 3, 4], 2) == 9, \"\
    Square\"\n    assert index_power([1, 3, 10, 100], 3) == 1000000, \"Cube\"\n  \
    \  assert index_power([0, 1], 0) == 1, \"Zero power\"\n    assert index_power([1,\
    \ 2], 3) == -1, \"IndexError\"\n    print(\"Coding complete? Click 'Check' to\
    \ review your tests and earn cool rewards!\")\n"
  learner_created: false
status: Solved
code: "def index_power(array: list, n: int) -> int:\n    \"\"\"\n        Find Nth\
  \ power of the element with index N.\n    \"\"\"\n    if n > len(array) - 1 :\n\
  \        return -1\n    \n    res = array[n]**n\n    \n    \n    return res\n\n\
  if __name__ == '__main__':\n    print('Example:')\n    print(index_power([1, 2,\
  \ 3, 4], 2))\n    \n    #These \"asserts\" using only for self-checking and not\
  \ necessary for auto-testing\n    assert index_power([1, 2, 3, 4], 2) == 9, \"Square\"\
  \n    assert index_power([1, 3, 10, 100], 3) == 1000000, \"Cube\"\n    assert index_power([0,\
  \ 1], 0) == 1, \"Zero power\"\n    assert index_power([1, 2], 3) == -1, \"IndexError\"\
  \n    print(\"Coding complete? Click 'Check' to review your tests and earn cool\
  \ rewards!\")\n"
seconds_from_change: 25385556
