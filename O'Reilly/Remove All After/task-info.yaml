type: checkiO
files:
- name: mission.py
  visible: true
  text: |
    from typing import Iterable


    def remove_all_after(items: list, border: int) -> Iterable:
        # your code here
        return items


    if __name__ == '__main__':
        print("Example:")
        print(list(remove_all_after([1, 2, 3, 4, 5], 3)))

        # These "asserts" are used for self-checking and not for an auto-testing
        assert list(remove_all_after([1, 2, 3, 4, 5], 3)) == [1, 2, 3]
        assert list(remove_all_after([1, 1, 2, 2, 3, 3], 2)) == [1, 1, 2]
        assert list(remove_all_after([1, 1, 2, 4, 2, 3, 4], 2)) == [1, 1, 2]
        assert list(remove_all_after([1, 1, 5, 6, 7], 2)) == [1, 1, 5, 6, 7]
        assert list(remove_all_after([], 0)) == []
        assert list(remove_all_after([7, 7, 7, 7, 7, 7, 7, 7, 7], 7)) == [7]
        print("Coding complete? Click 'Check' to earn cool rewards!")
  learner_created: false
status: Solved
feedback:
  message: All tests passed
  time: Tue, 24 Nov 2020 09:27:43 UTC
code: |
  from typing import Iterable


  def remove_all_after(items: list, border: int) -> Iterable:
      # your code here
      return items


  if __name__ == '__main__':
      print("Example:")
      print(list(remove_all_after([1, 2, 3, 4, 5], 3)))

      # These "asserts" are used for self-checking and not for an auto-testing
      assert list(remove_all_after([1, 2, 3, 4, 5], 3)) == [1, 2, 3]
      assert list(remove_all_after([1, 1, 2, 2, 3, 3], 2)) == [1, 1, 2]
      assert list(remove_all_after([1, 1, 2, 4, 2, 3, 4], 2)) == [1, 1, 2]
      assert list(remove_all_after([1, 1, 5, 6, 7], 2)) == [1, 1, 5, 6, 7]
      assert list(remove_all_after([], 0)) == []
      assert list(remove_all_after([7, 7, 7, 7, 7, 7, 7, 7, 7], 7)) == [7]
      print("Coding complete? Click 'Check' to earn cool rewards!")
seconds_from_change: 9223372036854775807
