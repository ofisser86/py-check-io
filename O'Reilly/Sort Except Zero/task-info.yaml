type: checkiO
files:
- name: mission.py
  visible: true
  text: |
    from typing import Iterable


    def except_zero(items: list) -> Iterable:
        zero_list = [i for i in enumerate(items) if i[1] == 0]
        items = sorted(items)[items.count(0):]
        for i in zero_list:
            items.insert(i[0], 0)
        return items


    if __name__ == '__main__':
        print("Example:")
        print(list(except_zero([5, 3, 0, 0, 4, 1, 4, 0, 7])))

        # These "asserts" are used for self-checking and not for an auto-testing
        assert list(except_zero([5, 3, 0, 0, 4, 1, 4, 0, 7])) == [1, 3, 0, 0, 4, 4, 5, 0, 7]
        assert list(except_zero([0, 2, 3, 1, 0, 4, 5])) == [0, 1, 2, 3, 0, 4, 5]
        assert list(except_zero([0, 0, 0, 1, 0])) == [0, 0, 0, 1, 0]
        assert list(except_zero([4, 5, 3, 1, 1])) == [1, 1, 3, 4, 5]
        assert list(except_zero([0, 0])) == [0, 0]
        print("Coding complete? Click 'Check' to earn cool rewards!")
  learner_created: false
status: Solved
code: |
  from typing import Iterable


  def except_zero(items: list) -> Iterable:
      zero_list = [i for i in enumerate(items) if i[1] == 0]
      items = sorted(items)[items.count(0):]
      for i in zero_list:
          items.insert(i[0], 0)
      return items


  if __name__ == '__main__':
      print("Example:")
      print(list(except_zero([5, 3, 0, 0, 4, 1, 4, 0, 7])))

      # These "asserts" are used for self-checking and not for an auto-testing
      assert list(except_zero([5, 3, 0, 0, 4, 1, 4, 0, 7])) == [1, 3, 0, 0, 4, 4, 5, 0, 7]
      assert list(except_zero([0, 2, 3, 1, 0, 4, 5])) == [0, 1, 2, 3, 0, 4, 5]
      assert list(except_zero([0, 0, 0, 1, 0])) == [0, 0, 0, 1, 0]
      assert list(except_zero([4, 5, 3, 1, 1])) == [1, 1, 3, 4, 5]
      assert list(except_zero([0, 0])) == [0, 0]
      print("Coding complete? Click 'Check' to earn cool rewards!")
seconds_from_change: 107271
