type: checkiO
files:
- name: mission.py
  visible: true
  text: |
    def remove_brackets(line: str) -> str:
        # your code here
        return line


    if __name__ == '__main__':
        print("Example:")
        print(remove_brackets('(()()'))

        # These "asserts" are used for self-checking and not for an auto-testing
        assert remove_brackets('(()()') == '()()'
        assert remove_brackets('[][[[') == '[]'
        assert remove_brackets('[[(}]]') == '[[]]'
        assert remove_brackets('[[{}()]]') == '[[{}()]]'
        assert remove_brackets('[[[[[[') == ''
        assert remove_brackets('[[[[}') == ''
        assert remove_brackets('') == ''
        assert remove_brackets('[(])') == '()'
        print("Coding complete? Click 'Check' to earn cool rewards!")
  learner_created: false
status: Unchecked
code: |
  def remove_brackets(line: str) -> str:
      # your code here
      return line


  if __name__ == '__main__':
      print("Example:")
      print(remove_brackets('(()()'))

      # These "asserts" are used for self-checking and not for an auto-testing
      assert remove_brackets('(()()') == '()()'
      assert remove_brackets('[][[[') == '[]'
      assert remove_brackets('[[(}]]') == '[[]]'
      assert remove_brackets('[[{}()]]') == '[[{}()]]'
      assert remove_brackets('[[[[[[') == ''
      assert remove_brackets('[[[[}') == ''
      assert remove_brackets('') == ''
      assert remove_brackets('[(])') == '()'
      print("Coding complete? Click 'Check' to earn cool rewards!")
seconds_from_change: 9223372036854775807
